[{"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\index.js":"1","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\App.js":"2","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Header.js":"3","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Home.js":"4","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Cadastros\\Diploma.js":"5","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Cadastros\\IncluirCadastroDiploma.js":"6","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Login\\Login.js":"7","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Operacoes\\LivroRegistro.js":"8","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Consultas\\Diplomas.js":"9","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Consultas\\DiplomaVisualizar.js":"10","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Login\\LoginCreate.js":"11","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Login\\LoginPasswordReset.js":"12","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Login\\LoginPasswordLost.js":"13","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Login\\LoginForm.js":"14","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Acordeao.js":"15","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Ferramentas\\ManutencaoDiploma.js":"16","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Form\\Modal\\ModalEditarCadastro.js":"17","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Form\\Modal\\ModalConfirmarExclusao.js":"18","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Form\\Alertas\\AlertError.js":"19","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Form\\Alertas\\AlertSucess.js":"20","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Form\\Input.js":"21","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Form\\Select.js":"22","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Form\\Textarea.js":"23","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Form\\RadioECheckbox\\Checkbox.js":"24","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\validaCpf.js":"25","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Ferramentas\\ManutencaoDiplomaAlterar.js":"26","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\HomeScreen.js":"27","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\UserContext.js":"28"},{"size":290,"mtime":1609871656251,"results":"29","hashOfConfig":"30"},{"size":2497,"mtime":1609788759306,"results":"31","hashOfConfig":"30"},{"size":759,"mtime":1609788736273,"results":"32","hashOfConfig":"30"},{"size":147,"mtime":1609871574435,"results":"33","hashOfConfig":"30"},{"size":8385,"mtime":1609528345140,"results":"34","hashOfConfig":"30"},{"size":5986,"mtime":1609517825088,"results":"35","hashOfConfig":"30"},{"size":677,"mtime":1608486286093,"results":"36","hashOfConfig":"30"},{"size":2147,"mtime":1609445763419,"results":"37","hashOfConfig":"30"},{"size":7168,"mtime":1609528729112,"results":"38","hashOfConfig":"30"},{"size":12477,"mtime":1609515273931,"results":"39","hashOfConfig":"30"},{"size":4621,"mtime":1609871594994,"results":"40","hashOfConfig":"30"},{"size":176,"mtime":1609871636477,"results":"41","hashOfConfig":"30"},{"size":2382,"mtime":1609871623652,"results":"42","hashOfConfig":"30"},{"size":2622,"mtime":1609871609689,"results":"43","hashOfConfig":"30"},{"size":3550,"mtime":1609626180836,"results":"44","hashOfConfig":"30"},{"size":7122,"mtime":1609625056381,"results":"45","hashOfConfig":"30"},{"size":752,"mtime":1609353447292,"results":"46","hashOfConfig":"30"},{"size":792,"mtime":1609352566123,"results":"47","hashOfConfig":"30"},{"size":542,"mtime":1609430099534,"results":"48","hashOfConfig":"30"},{"size":534,"mtime":1609701514632,"results":"49","hashOfConfig":"30"},{"size":786,"mtime":1609423565672,"results":"50","hashOfConfig":"30"},{"size":788,"mtime":1609442041919,"results":"51","hashOfConfig":"30"},{"size":471,"mtime":1609442984120,"results":"52","hashOfConfig":"30"},{"size":156,"mtime":1609506772470,"results":"53","hashOfConfig":"30"},{"size":1487,"mtime":1609507825176,"results":"54","hashOfConfig":"30"},{"size":11411,"mtime":1609517807781,"results":"55","hashOfConfig":"30"},{"size":586,"mtime":1609782171768,"results":"56","hashOfConfig":"30"},{"size":406,"mtime":1609787457810,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12z2sds",{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"63"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"63"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"63"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"63"},"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\index.js",[],"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\App.js",["126","127","128"],"import React from 'react'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport {UserStorage} from './componentes/UserContext'\nimport './App.css';\nimport Header from './componentes/Header'\nimport Home from './componentes/Home'\nimport Login from './componentes/Login/Login'\nimport Card from 'react-bootstrap/Card';\nimport './App.css';\nimport Diplomas from './componentes/Consultas/Diplomas';\nimport LivroRegistro from './componentes/Operacoes/LivroRegistro';\nimport Diploma from './componentes/Cadastros/Diploma';\nimport IncluirCadastroDiploma from './componentes/Cadastros/IncluirCadastroDiploma';\nimport DiplomaVisualizar from './componentes/Consultas/DiplomaVisualizar';\nimport LoginCreate from './componentes/Login/LoginCreate';\nimport ManutencaoDiploma from './componentes/Ferramentas/ManutencaoDiploma';\nimport ManutencaoDiplomaAlterar from './componentes/Ferramentas/ManutencaoDiplomaAlterar';\nimport HomeScreen from './componentes/HomeScreen';\n\nconst App = () => {\n  return (\n    <Card className=\"card mt-5 mb-5\" style={{\n      width: '74rem', margin: 'auto', borderWidth: '20px',\n      borderColor: \"#3c6178\", backgroundColor: '#eee'\n    }}>\n      <Card.Body >\n        <BrowserRouter>\n        {/* <UserStorage> */}\n          <Header></Header>\n          <Routes>\n            <Route path=\"/\" element={<Login />} />\n            <Route path=\"/login/*\" element={<Login></Login>} />\n            <Route path=\"/cadastro/diploma\" element={<Diploma></Diploma>} />\n            <Route path=\"/consulta/diplomas\" element={<Diplomas></Diplomas>} />\n            <Route path=\"/consulta/diplomas/visualizar\" element={<DiplomaVisualizar></DiplomaVisualizar>} />\n            <Route path=\"/ferramentas/manutencaoDiploma/alterar\" element={<ManutencaoDiplomaAlterar></ManutencaoDiplomaAlterar>} />\n            <Route path=\"/ferramentas/manutencaoDiploma\" element={<ManutencaoDiploma></ManutencaoDiploma>} />\n            <Route path=\"/operacoes/livroRegistro\" element={<LivroRegistro></LivroRegistro>} />\n            <Route path=\"/cadastro/incluirCadastroDiploma\" element={<IncluirCadastroDiploma></IncluirCadastroDiploma>} />\n            <Route path=\"/ferramentas/manutencaoDiploma\" element={<ManutencaoDiploma></ManutencaoDiploma>} />\n            <Route path=\"/login/telaPrincipal\" element={<HomeScreen></HomeScreen>} />\n          </Routes>\n          {/* <Footer></Footer> */}\n          {/* </UserStorage> */}\n        </BrowserRouter>\n      </Card.Body>\n    </Card  >\n  )\n}\n\nexport default App\n",["129","130"],"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Header.js",["131"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport usuario from '../assets/usuario.svg';\nimport Button from 'react-bootstrap/Button';\n// import Accordion from 'react-bootstrap/Accordion'\nimport { FaUser } from \"react-icons/fa\";\n// import {UserContext} from './UserContext'\n// import context from 'react-bootstrap/esm/AccordionContext';\n\n\nconst Header = () => {\n//  const {data} = React.useContext(UserContext);\n console.log(usuario);\n  return (\n\n    <header className=\"mt-4 \">\n      <nav  className=\"mt-2 mr-5 nav justify-content-end\">\n  <Link className=\" mr-3 mb-5 mt-2 linkLogin \" to=\"/login\">Login / Criar</Link> \n  <FaUser className='user mr-5 mt-2 ' alt=\"Usuario\"></FaUser>\n \n      </nav>\n    </header>\n  )\n}\n\nexport default Header\n","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Home.js",[],"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Cadastros\\Diploma.js",["132","133","134","135","136","137","138","139","140","141","142","143","144","145"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { FaEdit, FaUserEdit, FaTrashAlt } from 'react-icons/fa';\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { event } from 'jquery';\r\nimport ModalConfirmarExclusao from '../Form/Modal/ModalConfirmarExclusao';\r\nimport Acordeao from '../Acordeao';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AlertSucess from '../Form/Alertas/AlertSucess';\r\nimport AlertError from '../Form/Alertas/AlertError';\r\nimport ModalEditarCadastro from '../Form/Modal/ModalEditarCadastro';\r\nimport Input from '../Form/Input';\r\n\r\nconst Diploma = () => {\r\n  const [name, setName] = React.useState('');\r\n  const [initialDate, setInitialDate] = React.useState('');\r\n  const [finalDate, setFinalDate] = React.useState('');\r\n  const [loading, setLoading] = React.useState('');\r\n  const [table, setTable] = React.useState(false);\r\n  const [noRecord, setNoRecord] = React.useState(false);\r\n  // const [showAlert, setShowAlert] = React.useState(false);\r\n  const [showAlertErro, setShowAlertErro] = React.useState(false);\r\n  const [show, setShow] = React.useState(false);\r\n  const [showExcluir, setShowExcluir] = React.useState(false);\r\n  const navigate = useNavigate();\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleTable = () => setTable(true);\r\n  const handleCloseExcluirCancelar = () => setShowExcluir(false);\r\n  const handleShowExcluir = (e, id) => setShowExcluir(true);\r\n  const handleDelete = (e, id) => {\r\n    const novosDados = [...dados]\r\n    novosDados.splice(novosDados.indexOf({ id }), 1);\r\n    setDados(novosDados)\r\n    console.log(id);\r\n    console.log(novosDados);\r\n    setShowExcluir(false);\r\n    console.log(novosDados);\r\n    // setShowAlert(true);\r\n  };\r\n  // simulando dados do banco - início\r\n  const [dados, setDados] = React.useState([\r\n    { id: '1', name: 'luk', instituição: 'UEMG', data: '01/05/10' }\r\n  ]);\r\n  // simulando dados do banco - fim\r\n\r\n  const onSubmit = (data) => {\r\n    setTable(true);\r\n    console.log(data);\r\n    //  if (dados.aluno != aluno ) {\r\n    //   setNenhumRegistro(true);\r\n    //   setTabela(false);\r\n    // }\r\n\r\n  };\r\n  const handleInclude = () => navigate('/cadastro/incluirCadastroDiploma');\r\n\r\n  return (\r\n    <div className=\"container animeLeft grid grid-template-areas-1\">\r\n      <div class='titleGrid'><h1 className=\"mt-2 login title\" >Cadastro de Diplomas</h1></div>\r\n      <div class=\"sidenav\">\r\n        <Acordeao></Acordeao>\r\n      </div>\r\n\r\n      <div className='content' content>\r\n        <AlertSucess texto='Registro Excluído com sucesso !'></AlertSucess>\r\n        <AlertError texto='Erro na exclusão do registro !'></AlertError>\r\n\r\n        <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-4 \">\r\n\r\n          <Form.Row>\r\n            {initialDate == '' && finalDate == '' ? (<Input  size ='lg' lg=\"11\" label='Aluno' name='name' register={register({ required: true })} value={name} type='text' textoErro={errors.name && \"Nome do Aluno é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setName(event.target.value)}></Input>) :\r\n              (<Input  size ='lg' lg='11' label='Aluno' name='name' value={name} type='text' register={register({ required: false })} textoErro={errors.name && \"Nome do Aluno é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setName(event.target.value)}></Input>)}\r\n          </Form.Row>\r\n\r\n          <Form.Row >\r\n            {name == '' ? (<Input  size ='lg'  lg=\"5\" label='Data' name='initialDate' register={register({ required: true })} value={initialDate} type='date' textoErro={errors.initialDate && \"Data inicial é obrigatória\"} onChange={(event) => setInitialDate(event.target.value)}></Input>) :\r\n              (<Input  size ='lg'  lg='5' label='Data' name='initialDate' value={initialDate} type='date' register={register({ required: false })} textoErro={errors.initialDate && \"Data inicial é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setInitialDate(event.target.value)}></Input>)}\r\n            <p className=\"mt-5 mr-3 ml-3\"> a </p>\r\n            {name == '' ? (<Input  size ='lg'  lg=\"5\" label='' name='finalDate' register={register({ required: true })} value={finalDate} type='date' textoErro={errors.finalDate && \"Data Final é obrigatória\"} onChange={(event) => setFinalDate(event.target.value)}></Input>) :\r\n              (<Input size ='lg' lg='5'  label='Data' name='finalDate' value={finalDate} type='date' register={register({ required: false })} textoErro={errors.finalDate && \"Data Final é obrigatória\"} onChange={(event) => setFinalDate(event.target.value)}></Input>)}\r\n          </Form.Row>\r\n\r\n          {loading ? (<Button  size='lg' disabled className=\"col-lg-2 mt-3 \" variant=\"primary\" type=\"submit\"> Pesquisando...</Button>\r\n          ) : (<Button  size='lg' className=\"col-lg-2 mt-3 \" variant=\"primary\" type=\"submit\"> Pesquisar </Button>)}\r\n          {/* <Button className=\"col-lg-2 ml-3 mt-3\" variant=\"secondary\" type=\"button\" href=\"/cadastro/incluirCadastroDiploma\" > Incluir </Button> */}\r\n          <Button  size='lg' className=\"col-lg-2 ml-3 mt-3\" variant=\"secondary\" type=\"button\" onClick={handleInclude} > Incluir </Button>\r\n\r\n        </Form>\r\n\r\n        {/* tabela de resultados Encontrados - início */}\r\n        {table && dados.length > 0 && <div > <h5 className=\"mt-5\"> Resultados Encontrados:</h5><Table striped bordered hover className=\" col-lg-11  mt-3 animeLeft\">\r\n          <thead >\r\n            <tr>\r\n              <th >ID</th>\r\n              <th>Aluno</th>\r\n              <th>Instituiçao</th>\r\n              <th>Data Inclusão</th>\r\n              <th>Opções</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {dados\r\n              .filter((dado) => dado.name == name).map(({ id, name, instituição, data }) => (\r\n                <tr key={id}>\r\n                  <td>{id}</td>\r\n                  <td>{name}</td>\r\n                  <td>{instituição}</td>\r\n                  <td>{data}</td>\r\n                  <td>\r\n                  \r\n                    <FaUserEdit className='editar-icons mr-2' title=\"Editar\" onClick={handleShow} ></FaUserEdit >\r\n                    <RiDeleteBin6Line className='deletar-icons mt-1' title=\"Excluir\" onClick={handleShowExcluir}></RiDeleteBin6Line>\r\n                    {/* <FaTrashAlt className='deletar-icons ' title=\"Excluir\" onClick={handleShowExcluir} ></FaTrashAlt> */}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table> </div>}\r\n        {noRecord && <p>Nenhum registro Encontrado</p>}\r\n        {/* tabela de resultados Encontrados - fim */}\r\n      </div>\r\n\r\n      <ModalEditarCadastro show={show} onHide={handleClose} className='subtitleModal ' texto='Editar Cadastro de Diplomas' onClick={handleClose}><Form className=\"mt-4\">\r\n        <Form.Row>\r\n          <Input   lg=\"11\" label='Aluno' name='name' register={register({ required: false })} value={name} type='text' textoErro={errors.name && \"Nome do Aluno é obrigatória\"} onChange={(event) => setName(event.target.value)}></Input>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Input    lg=\"5\" label='Data' name='initialDate' register={register({ required: false })} value={initialDate} type='date' textoErro={errors.initialDate && \"Data inicial é obrigatória\"} onChange={(event) => setInitialDate(event.target.value)}></Input>\r\n          <p className=\"mt-5 mr-3 ml-3\"> a </p>\r\n          <Input  lg=\"5\" className='mt-2' label='' name='finalDate' register={register({ required: true })} value={finalDate} type='date' textoErro={errors.finalDate && \"Data Final é obrigatória\"} onChange={(event) => setFinalDate(event.target.value)}></Input>\r\n        </Form.Row>\r\n      </Form>\r\n      </ModalEditarCadastro>\r\n\r\n      <ModalConfirmarExclusao showExcluir={showExcluir} onHide={handleCloseExcluirCancelar} className='subtitleModal'\r\n        cancelar={handleCloseExcluirCancelar} delet={(e) => handleDelete()} texto='Tem certeza que deseja excluir o item selecionado !' > </ModalConfirmarExclusao>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Diploma\r\n","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Cadastros\\IncluirCadastroDiploma.js",["146","147","148","149","150","151","152","153","154","155","156"],"import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\n// import Alert from 'react-bootstrap/Alert';\r\nimport { FaGenderless } from 'react-icons/fa';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Acordeao from '../Acordeao';\r\nimport useMaskInput from 'use-mask-input';\r\nimport Input from '../Form/Input';\r\nimport Checkbox from '../Form/RadioECheckbox/Checkbox'\r\nimport AlertSucess from '../Form/Alertas/AlertSucess';\r\nimport AlertError from '../Form/Alertas/AlertError';\r\nimport Select from '../Form/Select';\r\n\r\n// falta o restante do formulario !!!\r\n\r\nconst IncluirCadastroDiploma = () => {\r\n  const [cpf, setCpf] = React.useState('');\r\n  const [rg, setRg] = React.useState('');\r\n  const [name, setName] = React.useState('');\r\n  const [gender, setGender] = React.useState('');\r\n  const [nameFather, setNameFather] = React.useState([]);\r\n  const [nameMother, setNameMother] = React.useState('');\r\n  const [country, setCountry] = React.useState('');\r\n  const [state, setState] = React.useState('');\r\n  const [city, setCity] = React.useState('');\r\n  const [showAlert, setShowAlert] = React.useState(false);\r\n  const [showAlertErro, setShowAlertErro] = React.useState(false);\r\n  const [loading, setLoading] = React.useState('');\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const navigate = useNavigate();\r\n\r\n  // simulando dados do banco \r\n  const [dados, setDados] = React.useState([\r\n    { id: '1', name: 'luk', instituição: 'UEMG', data: '01/05/10' }\r\n  ]);\r\n\r\n  const handleBack = () => navigate('/cadastro/diploma');\r\n  const alert = () => setShowAlert(true);\r\n  const onSubmit = (data) => console.log(data);\r\n  const maskedCPFRef = useMaskInput({\r\n    mask: ['999.999.999-99'],\r\n    register: register({ required: true }),\r\n  })\r\n\r\n  return (\r\n    <div className=\"container animeLeft grid grid-template-areas-1\">\r\n      <div class='titleGrid'>  <h1 className=\"mt-2 login title\" >Cadastro de Diplomas</h1></div>\r\n      <div class=\"sidenav\">\r\n        <Acordeao></Acordeao>\r\n      </div>\r\n      <div className='content' >\r\n        <AlertSucess texto='Registro incluído com sucesso !'></AlertSucess>\r\n        <AlertError texto='Erro na Inclusão do registro !'></AlertError>\r\n\r\n        <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-5 \">\r\n          <Form.Row>\r\n            <Input lg=\"5\" label='CPF' name='cpf' size='lg' register={maskedCPFRef} value={cpf} type='text' placeholder=\" Número do CPF\" textoErro={errors.cpf && \"Campo Cpf é obrigatório\"} onChange={(event) => setCpf(event.target.value)}></Input>\r\n            <Input lg=\"6\" label='RG' name='rg' size='lg' register={register({ required: true })} value={rg} type='text' placeholder=\" Número do RG\" textoErro={errors.rg && \"Campo RG é obrigatório\"} onChange={(event) => setRg(event.target.value)}></Input>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Input lg=\"11\" label='Nome do Aluno' size='lg' name='name' register={register({ required: true })} value={name} type='text' placeholder='Nome do Aluno' textoErro={errors.name && \"Campo Nome do Aluno é obrigatória\"} onChange={(event) => setName(event.target.value)}></Input>\r\n          </Form.Row>\r\n\r\n          <Form.Label >Sexo</Form.Label>\r\n          <Form.Check type='radio' ref={register({ required: true })} name='gender' value=\"feminino\" checked={gender === 'feminino'} onChange={({ target }) => setGender(target.value)} label='Feminino' />\r\n          <Form.Check type='radio' ref={register({ required: true })} name='gender' value=\"masculino\" checked={gender === 'masculino'} onChange={({ target }) => setGender(target.value)} label='Masculino' />\r\n          <Form.Text className='error'><p>{errors.gender && \"Campo Sexo é obrigatório\"}</p></Form.Text>\r\n\r\n          <Form.Row className='mt-4 '>\r\n            <Input lg=\"5\" label='Nome do Pai' size='lg' name=\"nameFather\" register={register({ required: true })} value={nameFather} type='text' placeholder='Nome do Aluno' textoErro={errors.nameFather && \"Campo Nome do Pai é obrigatório\"} onChange={(event) => setNameFather(event.target.value)}></Input>\r\n            <Input lg=\"6\" label='Nome da Mãe' size='lg' name=\"nameMother\" register={register({ required: true })} value={nameMother} type='text' placeholder='Nome da Mãe' textoErro={errors.nameMother && \"Campo Mãe é obrigatório\"} onChange={(event) => setNameMother(event.target.value)}></Input>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Select lg='5' size='lg' label='País' value={country} name='country' register={register({ required: true })} options={['Brasil', 'Português']} textoErro={errors.country && \"Campo País é obrigatório\"} onChange={({ target }) => setCountry(target.value)}></Select>\r\n            <Select lg='6' size='lg' label='Estado' value={state} name='state' register={register({ required: true })} options={['BH', 'Rio']} textoErro={errors.state && \"Campo Estado é obrigatório\"} onChange={({ target }) => setState(target.value)}></Select>\r\n            <Select lg='5' size='lg' label='Cidade' value={city} name='city' register={register({ required: true })} options={['BH', 'Rio']} textoErro={errors.city && \"Campo Cidade é obrigatório\"} onChange={({ target }) => setCity(target.value)}></Select>\r\n\r\n          </Form.Row>\r\n\r\n          {loading ? (<Button disabled className=\"col-lg-2 mt-3 \" variant=\"primary\" type=\"submit\"> Aguarde...</Button>\r\n          ) : (<Button className=\"col-lg-2 mt-3 mr-2 \" variant=\"primary\" type=\"submit\" onClick={alert} > Incluir </Button>)}\r\n          <Button className=\"col-lg-2 mt-3 \" variant=\"secondary\" type=\"submit\" onClick={handleBack}> Voltar </Button>\r\n\r\n        </Form>\r\n      </div>\r\n    </div>\r\n    // falta o restante do formulario\r\n  );\r\n}\r\n\r\nexport default IncluirCadastroDiploma\r\n","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Login\\Login.js",[],"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Operacoes\\LivroRegistro.js",["157","158"],"import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Input from '../Form/Input';\r\nimport Acordeao from '../Acordeao';\r\nimport Select from '../Form/Select';\r\n\r\nconst LivroRegistro = () => {\r\n    const [book, setBook] = React.useState('');\r\n    const [homePage, setHomePage] = React.useState('');\r\n    const [loading, setLoading] = React.useState('');\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = (data) => console.log(data);\r\n\r\n    return (\r\n        <div className=\"container animeLeft grid grid-template-areas-1\">\r\n            <div class='titleGrid'>  <h1 className=\"mt-2 login title\" >Relatório Registro de Livros</h1></div>\r\n            <div class=\"sidenav\">\r\n                <Acordeao></Acordeao>\r\n            </div>\r\n            <div className='content' content>\r\n                <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-5 \">\r\n                    <Form.Row>\r\n                        <Select lg='11' size='lg' label='Livro' value={book} name='book' register={register({ required: true })} options={['livro1', 'livro2']} textoErro={errors.book && \"Campo livro é obrigatório\"} onChange={(event) => setBook(event.target.value)}></Select>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Input size='lg' lg='11' label='Pagina Inicial' name='homePage' value={homePage} type='text' register={register({ required: true })} textoErro={errors.homePage && \"Campo Página Inicial é obrigatória\"} placeholder='Número da Página' onChange={(event) => setHomePage(event.target.value)}></Input>\r\n                    </Form.Row>\r\n\r\n                    {loading ? (<Button size='lg' disabled className=\"col-lg-3 mt-3 \" variant=\"primary\" type=\"submit\"> Aguarde...</Button>\r\n                    ) : (<Button  size='lg' className=\"col-lg-3 mt-3 \" variant=\"primary\" type=\"submit\"> Carregar PDF </Button>)}\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LivroRegistro\r\n","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Consultas\\Diplomas.js",["159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { ImEyeMinus} from \"react-icons/im\";\r\n// import { BsFillEyeFill } from 'react-icons/bs';\r\n// import { event } from 'jquery';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Acordeao from '../Acordeao';\r\nimport Input from '../Form/Input';\r\nimport Select from '../Form/Select';\r\n\r\nconst Diplomas = () => {\r\n    const [name, setName] = React.useState('');\r\n    const [institution, setInstitution] = React.useState('');\r\n    const [initialDate, setInitialDate] = React.useState('');\r\n    const [finalDate, setFinalDate] = React.useState('');\r\n    const [status, setStatus] = React.useState('');\r\n    const [loading, seLoading] = React.useState('');\r\n    const [table, setTable] = React.useState(false);\r\n    const [noRecord, setNoRecord] = React.useState(false);\r\n    const navigate = useNavigate();\r\n    const [show, setShow] = React.useState(false);\r\n    const [showExcluir, setShowExcluir] = React.useState(false);\r\n\r\n    // simulando dados do banco \r\n    const [dados, setDados] = React.useState([\r\n        { id: '1', name: 'luk', instituição: 'UEMG', data: '01/05/10', situacao: 'Liberado' },\r\n        { id: '2', name: 'lulu', instituição: 'UFMG', data: '01/05/10', situacao: 'Liberado' }\r\n    ]);\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const handleTable = () => setTable(true);\r\n    const handleView = () => navigate('/consulta/diplomas/visualizar');\r\n\r\n    const onSubmit = (data) => {\r\n        setTable(true);\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        // <div className=\"container animeLeft ml-5\">\r\n        <div className=\"container animeLeft grid grid-template-areas-1\">\r\n            <div class='titleGrid'>  <h1 className=\"mt-2 login title\" >Consulta Analítica</h1></div>\r\n            <div class=\"sidenav\">\r\n                <Acordeao></Acordeao>\r\n            </div>\r\n            <div className='content' >\r\n                <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-4 \">\r\n\r\n                    <Form.Row>\r\n                        {initialDate == '' && finalDate == '' ? (<Input size='lg' lg=\"11\" label='Aluno' name='name' register={register({ required: true })} value={name} type='text' textoErro={errors.name && \"Nome do Aluno é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setName(event.target.value)}></Input>) :\r\n                            (<Input size='lg' lg='11' label='Aluno' name='name' value={name} type='text' register={register({ required: false })} textoErro={errors.name && \"Nome do Aluno é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setName(event.target.value)}></Input>)}\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Input size='lg' lg='11' label='Instituição' name='institution' value={institution} type='text' register={register({ required: true })} textoErro={errors.institution && \"Nome do Instituição é obrigatório\"} placeholder='Nome do aluno' onChange={(event) => setInstitution(event.target.value)}></Input>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        {name == '' ? (<Input size='lg' lg=\"5\" label='Data' name='initialDate' register={register({ required: true })} value={initialDate} type='date' textoErro={errors.initialDate && \"Data inicial é obrigatória\"} onChange={(event) => setInitialDate(event.target.value)}></Input>) :\r\n                            (<Input size='lg' lg='5' label='Data' name='initialDate' value={initialDate} type='date' register={register({ required: false })} textoErro={errors.initialDate && \"Data inicial é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setInitialDate(event.target.value)}></Input>)}\r\n                        <p className=\"mt-5 mr-3 ml-3\"> a </p>\r\n                        {name == '' ? (<Input size='lg' className='mt-2' lg=\"5\" label='' name='finalDate' register={register({ required: true })} value={finalDate} type='date' textoErro={errors.finalDate && \"Data Final é obrigatória\"} onChange={(event) => setFinalDate(event.target.value)}></Input>) :\r\n                            (<Input size='lg' lg='5' className='mt-2' name='finalDate' value={finalDate} type='date' register={register({ required: false })} textoErro={errors.finalDate && \"Data Final é obrigatória\"} onChange={(event) => setFinalDate(event.target.value)}></Input>)}\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Select lg='11' size='lg' label='Situação' value={status} name='status' register={register({ required: true })} options={['Liberado', 'Em Diligência']} textoErro={errors.status && \"Campo situação é obrigatório\"} onChange={({ target }) => setStatus(target.value)}></Select>\r\n                    </Form.Row>\r\n\r\n                    {loading ? (<Button  size='lg' disabled className=\"col-lg-2 mt-3 \" variant=\"primary\" type=\"submit\"> Pesquisando...</Button>\r\n                    ) : (<Button  size='lg' className=\"col-lg-2 mt-3 \" variant=\"primary\" type=\"submit\"> Pesquisar </Button>)}\r\n\r\n                </Form>\r\n\r\n                {/* tabela de resultados Encontrados - início */}\r\n                {table && dados.length > 0 && <div > <h5 className=\"mt-5\"> Resultados Encontrados:</h5><Table striped bordered hover className=\" col-lg-11  mt-3\">\r\n                    <thead >\r\n                        <tr>\r\n                            <th >ID</th>\r\n                            <th>Aluno</th>\r\n                            <th>Instituiçao</th>\r\n                            <th>Data Registro</th>\r\n                            <th>Situação </th>\r\n                            <th>Opções</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {dados\r\n                            .filter((dado) => dado.name == name).map(({ id, aluno, instituição, data, situacao }) => (\r\n                                <tr key={id}>\r\n                                    <td>{id}</td>\r\n                                    <td>{name}</td>\r\n                                    <td>{instituição}</td>\r\n                                    <td>{data}</td>\r\n                                    <td>{situacao}</td>\r\n                                    <td>\r\n                                        <ImEyeMinus className='visualizar-icons' type='button' title=\"Visualizar\" onClick={handleView} ></ImEyeMinus >\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                    </tbody>\r\n                </Table> </div>}\r\n                {/* tabela de resultados Encontrados - fim */}\r\n                {noRecord && <p>Nenhum registro Encontrado</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Diplomas\r\n","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Consultas\\DiplomaVisualizar.js",["175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191"],"import React from 'react'\r\nimport useMaskInput from 'use-mask-input';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { event } from 'jquery';\r\nimport { nativeTouchData } from 'react-dom/test-utils';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AlertSucess from '../Form/Alertas/AlertSucess';\r\nimport Acordeao from '../Acordeao';\r\nimport AlertError from '../Form/Alertas/AlertError';\r\nimport Input from '../Form/Input';\r\nimport Select from '../Form/Select';\r\nimport Textarea from '../Form/Textarea';\r\nimport {valida_cpf , valida} from '../validaCpf';\r\n\r\nconst DiplomaVisualizar = () => {\r\n  const [name, setName] = React.useState('');\r\n  const [cpf, setCpf] = React.useState('');\r\n  const [nameFather, setNameFather] = React.useState('');\r\n  const [nameMother, setNameMother] = React.useState('');\r\n  const [nationality, setNationality] = React.useState('');\r\n  const [state, setState] = React.useState('');\r\n  const [ra, setRa] = React.useState('');\r\n  const [diplomaTypes, setDiplomaTypes] = React.useState('');\r\n  const [course, setCourse] = React.useState('');\r\n  const [modality, setModality] = React.useState('');\r\n  const [level, setLevel] = React.useState('');\r\n  const [yearConclusion, setYearConclusion] = React.useState('');\r\n  const [dateGraduation, setDateGraduation] = React.useState('');\r\n  const [processNumber, setProcessNumber] = React.useState('');\r\n  const [processNumber1, setProcessNumber1] = React.useState('');\r\n  const [processNumber2, setProcessNumber2] = React.useState('');\r\n  const [registerNumber, setRegisterNumber] = React.useState('');\r\n  const [book, setBook] = React.useState('');\r\n  const [sheetNumber, setSheetNumber] = React.useState('');\r\n  const [registrationDate, setRegistrationDate] = React.useState('');\r\n  const [lotNumber, setLotNumber] = React.useState('');\r\n  const [status, setStatus] = React.useState([]);\r\n  // const [showAlert, setShowAlert] = React.useState(false);\r\n  const [loading, setLoading] = React.useState('');\r\n  // const [erroCpf, setErroCpf] = React.useState('');\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const navigate = useNavigate();\r\n\r\n  // simulando dados do banco \r\n  const [dados, setDados] = React.useState([\r\n    { id: '1', aluno: 'luk', instituição: 'UEMG', data: '01/05/10' }\r\n  ]);\r\n\r\n  const onSubmit = (data) => console.log(data);\r\n\r\n  const maskedCPFRef = useMaskInput({\r\n    mask: ['999.999.999-99'],\r\n    register: register({ required: true }),\r\n  })\r\n \r\n  const handleBack = () => navigate('/consulta/diplomas/');\r\n  function handleChange({ target }) {\r\n    if (target.checked) {\r\n      setStatus([...status, target.value]);\r\n    } else {\r\n      setStatus(status.filter((item) => item !== target.value));\r\n    }\r\n  }\r\n\r\n  const handleChecked = (item) => { return status.includes(item); }\r\n\r\n  const handleCpf = ({ target }) => valida(target.value);\r\n\r\n  return (\r\n    <div className=\"container animeLeft grid grid-template-areas-1\">\r\n      <div class='titleGrid'><h1 className=\"mt-2 login title\" >Consulta Analítica</h1></div>\r\n      <div class=\"sidenav\">\r\n        <Acordeao></Acordeao>\r\n      </div>\r\n\r\n      <div className='content' content>\r\n        <AlertSucess texto=' Registro Cadastrado com sucesso !'></AlertSucess>\r\n        <AlertError texto='Houve um erro no seu Cadastro !'></AlertError>\r\n\r\n        <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-5 \">\r\n          <Form.Row>\r\n            <Input size='lg' lg=\"6\" label='Nome do Aluno' name='name' register={register({ required: true })} value={name} type='text' textoErro={errors.name && \"Campo Nome do Aluno é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setName(event.target.value)}></Input>\r\n            <Input size='lg' lg=\"5\" label='CPF' name='cpf' size='lg' register={maskedCPFRef} value={cpf} type='text' placeholder=\" Número do CPF\" textoErro={errors.cpf && \"Campo Cpf é obrigatório\"} onChange={(event) => setCpf(event.target.value)}></Input>\r\n          </Form.Row>\r\n\r\n          <Form.Row >\r\n            <Input size='lg' lg=\"11\" label='Nome do Pai' name='nameFather' register={register({ required: true })} value={nameFather} type='text' textoErro={errors.nameFather && \"Campo Nome do Pai é obrigatória\"} placeholder='Nome do Pai' onChange={(event) => setNameFather(event.target.value)}></Input>\r\n          </Form.Row>\r\n\r\n          <Form.Row >\r\n            <Input size='lg' lg=\"11\" label='Nome da Mãe' name='nameMother' register={register({ required: true })} value={nameFather} type='text' textoErro={errors.nameMother && \"Campo Nome da Mãe é obrigatória\"} placeholder='Nome da Mãe' onChange={(event) => setNameMother(event.target.value)}></Input>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Input size='lg' lg=\"5\" label='Naturalidade' name='nationality' register={register({ required: true })} value={nationality} type='text' textoErro={errors.nationality && \"Campo Naturalidade é obrigatório\"} placeholder='Naturalidade' onChange={(event) => setNationality(event.target.value)}></Input>\r\n            <Select lg='6' size='lg' label='Estado' value={state} name='state' register={register({ required: true })} options={['Minas Gerais', 'São Paulo', 'Rio de Janeiro']} textoErro={errors.state && \"Campo Estado é obrigatório\"} onChange={({ target }) => setState(target.value)}></Select>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Input size='lg' lg=\"5\" label='Matrícula' name='ra' register={register({ required: true })} value={nationality} type='text' textoErro={errors.ra && \"Campo Matrícula é obrigatório\"} placeholder='Número da Matrícula' onChange={(event) => setRa(event.target.value)}></Input>\r\n            <Input size='lg' lg=\"6\" label='Tipo Diploma' name='diplomaTypes' register={register({ required: true })} value={level} type='text' textoErro={errors.diplomaTypes && \"Campo Tipo Diploma é obrigatório\"} placeholder='Número da Matrícula' onChange={(event) => setDiplomaTypes(event.target.value)}></Input>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Select lg='5' size='lg' label='Curso' value={course} name='course' register={register({ required: true })} options={['Engenharia', 'Português', 'Matemática']} textoErro={errors.course && \"Campo Curso é obrigatório\"} onChange={({ target }) => setCourse(target.value)}></Select>\r\n            <Select lg='6' size='lg' label='Habilitacao' value={modality} name='modality' register={register({ required: true })} options={['Bacheralado', 'Licenciatura', 'Tecnólogo']} textoErro={errors.modality && \"Campo Habilitação é obrigatório\"} onChange={({ target }) => setModality(target.value)}></Select>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Input size='lg' lg=\"3\" label='Ano Conclusão ' name='yearConclusion' register={register({ required: true })} value={yearConclusion} type='text' textoErro={errors.yearConclusion && \"Campo Ano Conclusão é obrigatório\"} onChange={(event) => setYearConclusion(event.target.value)}></Input>\r\n            <Input size='lg' lg=\"4\" label='Data Colação De Grau' name='dateGraduation' register={register({ required: true })} value={dateGraduation} type='date' textoErro={errors.dateGraduation && \"Data inicial é obrigatória\"} onChange={(event) => setDateGraduation(event.target.value)}></Input>\r\n            <Input size='lg' lg=\"4\" label='Num. Processo' name='processNumber' register={register({ required: true })} value={processNumber} type='text' textoErro={errors.processNumber && \"Campo Num. Processo é obrigatório\"} onChange={(event) => setProcessNumber(event.target.value)}></Input>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Input size='lg' lg=\"3\" label='Num. Processo 1' name='processNumber1' register={register({ required: true })} value={processNumber1} type='text' textoErro={errors.processNumber1 && \"Campo Num. Processo 1 é obrigatório\"} onChange={(event) => setProcessNumber1(event.target.value)}></Input>\r\n            <Input size='lg' lg=\"4\" label='Num. Processo 2' name='processNumber2' register={register({ required: true })} value={processNumber2} type='text' textoErro={errors.processNumber2 && \"Campo Num. Processo 2 é obrigatório\"} onChange={(event) => setProcessNumber2(event.target.value)}></Input>\r\n            <Input size='lg' lg=\"4\" label='Num. Registro' name='registerNumber' register={register({ required: true })} value={registerNumber} type='text' textoErro={errors.processNumber && \"Campo Num. Registro 1 é obrigatório\"} onChange={(event) => setRegisterNumber(event.target.value)}></Input>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Input size='lg' lg=\"3\" label='Livro' name='book' register={register({ required: true })} value={book} type='text' textoErro={errors.book && \"Campo Livro é obrigatório\"} onChange={(event) => setBook(event.target.value)}></Input>\r\n            <Input size='lg' lg=\"4\" label='Num.Lote' name='lotNumber' register={register({ required: true })} value={lotNumber} textoErro={errors.lotNumber && \"Campo Num.Lote é obrigatório\"} onChange={(event) => setLotNumber(event.target.value)}></Input>\r\n            <Input size='lg' lg=\"4\" label='Data de Registro' name='registrationDate' register={register({ required: true })} value={registrationDate} textoErro={errors.registrationDate && \"Campo Data de Registro é obrigatória\"} onChange={(event) => setRegistrationDate(event.target.value)}></Input>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Select lg='6' size='lg' label='Situação' value={status} name='status' register={register({ required: true })} options={['Liberado', 'Em Diligência']} textoErro={errors.status && \"Campo Situação é obrigatório\"} onChange={({ target }) => setStatus(target.value)}></Select>\r\n          </Form.Row>\r\n\r\n          <Form.Group as={Col} lg=\"11\">\r\n            <Form.Label>Situação2</Form.Label>\r\n            <Form.Check type='checkbox' ref={register({ required: true })} name='checkbox' value=\"faltaDocumentosPessoais\" checked={handleChecked('faltaDocumentosPessoais')} onChange={handleChange} label='Falta Documentos Pessoais' />\r\n            <Form.Check type='checkbox' ref={register({ required: true })} name='checkbox' value='reconhecimentoCursoVencido' checked={handleChecked('reconhecimentoCursoVencido')} onChange={handleChange} label='Reconhecimento do Curso Vencido' />\r\n            <Form.Check type='checkbox' ref={register({ required: true })} name='checkbox' value='erroDiploma' checked={handleChecked('erroDiploma')} onChange={handleChange} label='Erro No Diploma' />\r\n            <Form.Check type='checkbox' ref={register({ required: true })} name='checkbox' value='erroTrancreverCarimboRegistroDiploma' checked={handleChecked('erroTrancreverCarimboRegistroDiploma')} onChange={handleChange} label='Erro ao Trancrever para o Carimbo de Registro no Diploma' />\r\n            <Form.Check type='checkbox' ref={register({ required: true })} name='checkbox' value='DAEValorInferiorCorrespondente' checked={handleChecked('DAEValorInferiorCorrespondente')} onChange={handleChange} label='DAE com Valor Inferior ao Correspondente de R$ 77,33' />\r\n            <Form.Check type='checkbox' ref={register({ required: true })} name='checkbox' value='erroHistorico' checked={handleChecked('erroHistorico')} onChange={handleChange} label='Erro no Histórico' />\r\n            <Form.Text className='error'><p>{errors.checkbox && \"Campo Situação2 é obrigatório\"}</p></Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Row>\r\n            <Textarea label='Observação' lg='11' rows={4} size='lg' className='mt-3'></Textarea>\r\n          </Form.Row>\r\n\r\n          <Form.Row className=\"mt-3\">\r\n            <Form.Label as={Col} lg='6'>Histórico</Form.Label>\r\n          </Form.Row>\r\n\r\n          {loading ? (<Button size='lg' disabled className=\"col-lg-2 mt-3 \" variant=\"primary\" type=\"submit\"> Aguarde...</Button>\r\n          ) : (<Button size='lg' className=\"col-lg-2 mt-3 mr-2 \" variant=\"primary\" type=\"submit\"> Pesquisar </Button>)}\r\n          <Button size='lg' className=\"col-lg-2 mt-3 \" variant=\"secondary\" type=\"submit\" onClick={handleBack}> Voltar </Button>\r\n\r\n        </Form>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default DiplomaVisualizar\r\n","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Login\\LoginCreate.js",["192"],"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Login\\LoginPasswordReset.js",[],"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Login\\LoginPasswordLost.js",["193"],"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Login\\LoginForm.js",["194"],"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Acordeao.js",[],"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Ferramentas\\ManutencaoDiploma.js",["195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210"],"import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {FaUserEdit} from 'react-icons/fa';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Acordeao from '../Acordeao';\r\nimport Input from '../Form/Input';\r\nimport Select from '../Form/Select';\r\n\r\nconst ManutencaoDiploma = () => {\r\n    const [name, setName] = React.useState('');\r\n    const [institution, setInstitution] = React.useState('');\r\n    const [initialDate, setInitialDate] = React.useState('');\r\n    const [finalDate, setFinalDate] = React.useState('');\r\n    const [status, setStatus] = React.useState('');\r\n    const [loading, seLoading] = React.useState('');\r\n    const [table, setTable] = React.useState(false);\r\n    const [noRecord, setNoRecord] = React.useState(false);\r\n    const navigate = useNavigate();\r\n    const [show, setShow] = React.useState(false);\r\n    const [showExcluir, setShowExcluir] = React.useState(false);\r\n\r\n    // simulando dados do banco \r\n    const [dados, setDados] = React.useState([\r\n        { id: '1', instituição: 'UEMG', name: 'luk',  situacao: 'Liberado', data: '01/05/10'  },\r\n        { id: '2',  instituição: 'UFMG', name: 'lulu', situacao: 'Liberado', data: '01/05/10'  }\r\n    ]);\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const handleTable = () => setTable(true);\r\n    const handleEdit = () => navigate('/ferramentas/manutencaoDiploma/alterar');\r\n\r\n    const onSubmit = (data) => {\r\n        setTable(true);\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container animeLeft grid grid-template-areas-1\">\r\n            <div class='titleGrid'>  <h1 className=\"mt-2 login title\" >Manutenção Diploma</h1></div>\r\n            <div class=\"sidenav\">\r\n                <Acordeao ></Acordeao>\r\n            </div>\r\n            <div className='content' >\r\n                <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-4 \">\r\n\r\n                    <Form.Row>\r\n                        {initialDate == '' && finalDate == '' ? (<Input size='lg' lg=\"11\" label='Aluno' name='name' register={register({ required: true })} value={name} type='text' textoErro={errors.name && \"Nome do Aluno é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setName(event.target.value)}></Input>) :\r\n                            (<Input size='lg' lg='11' label='Aluno' name='name' value={name} type='text' register={register({ required: false })} textoErro={errors.name && \"Nome do Aluno é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setName(event.target.value)}></Input>)}\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Input size='lg' lg='11' label='Instituição' name='institution' value={institution} type='text' register={register({ required: true })} textoErro={errors.institution && \"Nome do Instituição é obrigatório\"} placeholder='Nome do aluno' onChange={(event) => setInstitution(event.target.value)}></Input>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        {name == '' ? (<Input size='lg' lg=\"5\" label='Data Registro' name='initialDate' register={register({ required: true })} value={initialDate} type='date' textoErro={errors.initialDate && \"Data inicial é obrigatória\"} onChange={(event) => setInitialDate(event.target.value)}></Input>) :\r\n                            (<Input size='lg' lg='5' label='Data' name='initialDate' value={initialDate} type='date' register={register({ required: false })} textoErro={errors.initialDate && \"Data inicial é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setInitialDate(event.target.value)}></Input>)}\r\n                        <p className=\"mt-5 mr-3 ml-3\"> a </p>\r\n                        {name == '' ? (<Input size='lg' className='mt-2' lg=\"5\" label='' name='finalDate' register={register({ required: true })} value={finalDate} type='date' textoErro={errors.finalDate && \"Data Final é obrigatória\"} onChange={(event) => setFinalDate(event.target.value)}></Input>) :\r\n                            (<Input size='lg' lg='5' className='mt-2' name='finalDate' value={finalDate} type='date' register={register({ required: false })} textoErro={errors.finalDate && \"Data Final é obrigatória\"} onChange={(event) => setFinalDate(event.target.value)}></Input>)}\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Select lg='11' size='lg' label='Situação' value={status} name='status' register={register({ required: true })} options={['Liberado', 'Em Diligência']} textoErro={errors.status && \"Campo situação é obrigatório\"} onChange={({ target }) => setStatus(target.value)}></Select>\r\n\r\n                    </Form.Row>\r\n\r\n                    {loading ? (<Button size='lg' disabled className=\"col-lg-2 mt-3 \" variant=\"primary\" type=\"submit\"> Pesquisando...</Button>\r\n                    ) : (<Button  size='lg' className=\"col-lg-2 mt-3 \" variant=\"primary\" type=\"submit\"> Pesquisar </Button>)}\r\n\r\n                </Form>\r\n\r\n                {/* tabela de resultados Encontrados - início */}\r\n                {table && dados.length > 0 && <div > <h5 className=\"mt-5\"> Resultados Encontrados:</h5><Table striped bordered hover className=\" col-lg-11  mt-3\">\r\n                    <thead >\r\n                        <tr>\r\n                            <th >ID</th>\r\n                            <th>Instituiçao</th>\r\n                            <th>Aluno</th>\r\n                            <th>Situação </th>\r\n                            <th>Data Registro</th>\r\n                            <th>Opções</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {dados\r\n                            .filter((dado) => dado.name == name).map(({ id, aluno, instituição, data, situacao }) => (\r\n                                <tr key={id}>\r\n                                    <td>{id}</td>\r\n                                    <td>{instituição}</td>\r\n                                    <td>{name}</td>\r\n                                    <td>{situacao}</td>\r\n                                    <td>{data}</td>\r\n                                    \r\n                                    <td>\r\n                                        \r\n                                        <FaUserEdit className='editar-icons ' title=\"Alterar\" onClick={handleEdit} ></FaUserEdit>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                    </tbody>\r\n                </Table> </div>}\r\n                {/* tabela de resultados Encontrados - fim */}\r\n                {noRecord && <p>Nenhum registro Encontrado</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManutencaoDiploma\r\n","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Form\\Modal\\ModalEditarCadastro.js",[],"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Form\\Modal\\ModalConfirmarExclusao.js",[],"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Form\\Alertas\\AlertError.js",[],"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Form\\Alertas\\AlertSucess.js",[],"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Form\\Input.js",[],"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Form\\Select.js",[],"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Form\\Textarea.js",[],"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Form\\RadioECheckbox\\Checkbox.js",[],"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\validaCpf.js",["211","212","213","214","215"],"\r\n// const [erroCpf, setErroCpf] = React.useState('');\r\nexport function valida_cpf(value) {\r\n    var numeros, digitos, soma, i, resultado, digitos_iguais;\r\n    digitos_iguais = 1;\r\n    if (value.length < 11)\r\n      return false;\r\n    console.log(`teste 1 ${value}`)\r\n    for (i = 0; i < value.length - 1; i++)\r\n      if (value.charAt(i) != value.charAt(i + 1)) {\r\n        digitos_iguais = 0;\r\n        break;\r\n      }\r\n    console.log(`teste 2 ${value}`)\r\n    if (!digitos_iguais) {\r\n      numeros = value.substring(0, 9);\r\n      digitos = value.substring(9);\r\n      soma = 0;\r\n      for (i = 10; i > 1; i--)\r\n        soma += numeros.charAt(10 - i) * i;\r\n      resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n      console.log(`teste 3 ${value}`)\r\n      if (resultado != digitos.charAt(0))\r\n        return false;\r\n      numeros = value.substring(0, 10);\r\n      soma = 0;\r\n      for (i = 11; i > 1; i--)\r\n        soma += numeros.charAt(11 - i) * i;\r\n      resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n\r\n      if (resultado != digitos.charAt(1))\r\n        console.log(`teste 4 ${value}`)\r\n      return false;\r\n\r\n      return true;\r\n    }\r\n    else\r\n      return false;\r\n    console.log(`teste 5 ${value}`)\r\n  }\r\n\r\n export const valida = (value) => {\r\n    let valorCampo = (value).replace(/\\D/g, '');\r\n    if (valida_cpf(valorCampo))\r\n    //   setErroCpf(false); apaguei por causa do erro do setErroCpf\r\n    return 'teste'\r\n    else\r\n    //   setErroCpf(true)\r\n   return 'teste'\r\n\r\n  }\r\n","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\Ferramentas\\ManutencaoDiplomaAlterar.js",["216","217","218","219","220","221","222","223","224","225","226","227","228","229","230"],"import React from 'react'\r\nimport useMaskInput from 'use-mask-input';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { event } from 'jquery';\r\nimport { nativeTouchData } from 'react-dom/test-utils';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AlertSucess from '../Form/Alertas/AlertSucess';\r\nimport Acordeao from '../Acordeao';\r\nimport AlertError from '../Form/Alertas/AlertError';\r\nimport Input from '../Form/Input';\r\nimport Select from '../Form/Select';\r\nimport Textarea from '../Form/Textarea';\r\nimport {valida_cpf , valida} from '../validaCpf';\r\n\r\nconst ManutencaoDiplomaAlterar = () => {\r\n    const [name, setName] = React.useState('');\r\n  const [cpf, setCpf] = React.useState('');\r\n  const [rg, setRg] = React.useState('');\r\n  const [nameFather, setNameFather] = React.useState('');\r\n  const [nameMother, setNameMother] = React.useState('');\r\n  const [nationality, setNationality] = React.useState('');\r\n  const [country, setCountry] = React.useState('');\r\n  const [state, setState] = React.useState('');\r\n  const [city, setCity] = React.useState('');\r\n  const [dateBirth, setDateBirth] = React.useState('');\r\n  const [ra, setRa] = React.useState('');\r\n  const [dateInclusion, setDateInclusion] = React.useState('');\r\n  const [institution, setInstitution] = React.useState('');\r\n//   const [level, setLevel] = React.useState('');\r\n  const [course, setCourse] = React.useState('');\r\n  const [level, setLevel] = React.useState('');\r\n  const [modality, setModality] = React.useState('');\r\n  const [type, setType] = React.useState('');\r\n  const [ copyRegistration, setCopyRegistration] = React.useState('');\r\n  const [ foreignDocument, setForeignDocument] = React.useState('');\r\n  const [passaport, setPassaport] = React.useState('');\r\n    // const [showAlert, setShowAlert] = React.useState(false);\r\n  const [loading, setLoading] = React.useState('');\r\n  // const [erroCpf, setErroCpf] = React.useState('');\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const navigate = useNavigate();\r\n\r\n  // simulando dados do banco \r\n  const [dados, setDados] = React.useState([\r\n    { id: '1', aluno: 'luk', instituição: 'UEMG', data: '01/05/10' }\r\n  ]);\r\n\r\n  const onSubmit = (data) => console.log(data);\r\n\r\n  const maskedCPFRef = useMaskInput({\r\n    mask: ['999.999.999-99'],\r\n    register: register({ required: true }),\r\n  })\r\n \r\n  const handleBack = () => navigate('/ferramentas/manutencaoDiploma');\r\n  function handleChange({ target }) {\r\n    if (target.checked) {\r\n        setType([...type, target.value]);\r\n    } else {\r\n        setType(type.filter((item) => item !== target.value));\r\n    }\r\n  }\r\n\r\n  const handleChecked = (item) => { return type.includes(item); }\r\n  \r\n  const handleCpf = ({ target }) => valida(target.value);\r\n    return (\r\n        <div className=\"container animeLeft grid grid-template-areas-1\">\r\n      <div class='titleGrid'><h1 className=\"mt-2 login title\" >Manutenção Diploma</h1></div>\r\n      <div class=\"sidenav\">\r\n        <Acordeao></Acordeao>\r\n      </div>\r\n\r\n      <div className='content' content>\r\n        <AlertSucess texto=' Registro Cadastrado com sucesso !'></AlertSucess>\r\n        <AlertError texto='Houve um erro no seu Cadastro !'></AlertError>\r\n\r\n        <Form onSubmit={handleSubmit(onSubmit)} className=\"mt-5 \">\r\n          <Form.Row>\r\n            <Input size='lg' lg=\"11\" label='Nome do Aluno' name='name' register={register({ required: true })} value={name} type='text' textoErro={errors.name && \"Campo Nome do Aluno é obrigatória\"} placeholder='Nome do aluno' onChange={(event) => setName(event.target.value)}></Input>\r\n                      </Form.Row>\r\n          <Form.Row>\r\n          <Input size='lg' lg=\"5\" label='CPF' name='cpf' size='lg' register={maskedCPFRef} value={cpf} type='text' placeholder=\" Número do CPF\" textoErro={errors.cpf && \"Campo Cpf é obrigatório\"} onChange={(event) => setCpf(event.target.value)}></Input>\r\n          <Input lg=\"6\" label='RG' name='rg' size='lg' register={register({ required: true })} value={rg} type='text' placeholder=\" Número do RG\" textoErro={errors.rg && \"Campo RG é obrigatório\"} onChange={(event) => setRg(event.target.value)}></Input>\r\n          </Form.Row>\r\n          <Form.Row >\r\n            <Input size='lg' lg=\"11\" label='Nome do Pai' name='nameFather' register={register({ required: true })} value={nameFather} type='text' textoErro={errors.nameFather && \"Campo Nome do Pai é obrigatória\"} placeholder='Nome do Pai' onChange={(event) => setNameFather(event.target.value)}></Input>\r\n          </Form.Row>\r\n\r\n          <Form.Row >\r\n            <Input size='lg' lg=\"11\" label='Nome da Mãe' name='nameMother' register={register({ required: true })} value={nameFather} type='text' textoErro={errors.nameMother && \"Campo Nome da Mãe é obrigatória\"} placeholder='Nome da Mãe' onChange={(event) => setNameMother(event.target.value)}></Input>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n          <Select lg='5' size='lg' label='País' value={country} name='country' register={register({ required: true })} options={['Brasil', 'Português']} textoErro={errors.country && \"Campo País é obrigatório\"} onChange={({ target }) => setCountry(target.value)}></Select>\r\n            <Select lg='6' size='lg' label='Estado' value={state} name='state' register={register({ required: true })} options={['Minas Gerais', 'São Paulo', 'Rio de Janeiro']} textoErro={errors.state && \"Campo Estado é obrigatório\"} onChange={({ target }) => setState(target.value)}></Select>\r\n          </Form.Row>\r\n\r\n<Form.Row>\r\n<Select lg='5' size='lg' label='Cidade' value={city} name='city' register={register({ required: true })} options={['BH', 'Rio']} textoErro={errors.city && \"Campo Cidade é obrigatório\"} onChange={({ target }) => setCity(target.value)}></Select>\r\n<Input size='lg' lg=\"6\" label='Data de Nascimento' name='dateBirth' register={register({ required: true })} value={dateBirth} type='date' textoErro={errors.dateBirth && \"Campo data de Nascimento é obrigatório\"} onChange={(event) => setDateBirth(event.target.value)}></Input>\r\n</Form.Row>\r\n          <Form.Row>\r\n            <Input size='lg' lg=\"5\" label='Matrícula' name='ra' register={register({ required: true })} value={nationality} type='text' textoErro={errors.ra && \"Campo Matrícula é obrigatório\"} placeholder='Número da Matrícula' onChange={(event) => setRa(event.target.value)}></Input>\r\n             {/* <Input size='lg' lg=\"6\" label='Tipo Diploma' name='level' register={register({ required: true })} value={level} type='text' textoErro={errors.level && \"Campo Tipo Diploma é obrigatório\"} placeholder='Número da Matrícula' onChange={(event) => setLevel(event.target.value)}></Input> */}\r\n            <Input size='lg' lg=\"6\" label='Data da Inclusão' name='dateInclusion' register={register({ required: true })} value={dateInclusion} type='date' textoErro={errors.dateInclusion && \"Campo Data de Inclusão é obrigatório\"} onChange={(event) => setDateInclusion(event.target.value)}></Input>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n          <Select lg='5' size='lg' label='Instituição' value={institution} name='institution' register={register({ required: true })} options={['UEMG', 'UFMG', 'UFLA']} textoErro={errors.institution && \"Campo Instituição é obrigatório\"} onChange={({ target }) => setInstitution(target.value)}></Select>\r\n            <Select lg='6' size='lg' label='Curso' value={course} name='course' register={register({ required: true })} options={['Engenharia', 'Português', 'Matemática']} textoErro={errors.course && \"Campo Curso é obrigatório\"} onChange={({ target }) => setCourse(target.value)}></Select>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n          <Select lg='5' size='lg' label='Grau do curso' value={level} name='level' register={register({ required: true })} options={['Graduação', 'Pós Graduação', 'Apostila']} textoErro={errors.level && \"Campo Grau do Curso  é obrigatório\"} onChange={({ target }) => setLevel(target.value)}></Select>\r\n          <Select lg='6' size='lg' label='Habilitacao' value={modality} name='modality' register={register({ required: true })} options={['Bacheralado', 'Licenciatura', 'Tecnólogo']} textoErro={errors.modality && \"Campo Habilitação é obrigatório\"} onChange={({ target }) => setModality(target.value)}></Select>\r\n                 </Form.Row>\r\n                 \r\n                 <Form.Row>\r\n                 <Form.Group as={Col} lg=\"11\">\r\n            <Form.Label className='mr-3'>Tipo</Form.Label>\r\n            <Form.Check  inline type='checkbox' ref={register({ required: true })} name='type' value=\"type\" checked={handleChecked('Apostilamento')} onChange={handleChange} label='Apostilamento' />                      \r\n          </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Label >Registro de 2º Via</Form.Label>\r\n          {/* <Form.Check type='radio' ref={register({ required: true })} name='gender' value=\"feminino\" checked={gender === 'feminino'} onChange={({ target }) => setGender(target.value)} label='Feminino' /> */}\r\n          <Form.Check type='radio' ref={register({ required: true })} name='copyRegistration' value=\"não\" checked={copyRegistration === 'nao'} onChange={({ target }) => setCopyRegistration(target.value)} label='Não' />\r\n          <Form.Check type='radio' ref={register({ required: true })} name='copyRegistration' value=\"sim\" checked={copyRegistration === 'sim'} onChange={({ target }) => setCopyRegistration(target.value)} label='Sim' />\r\n          <Form.Text className='error'><p>{errors.copyRegistration && \"Campo Registro de 2º Via é obrigatório\"}</p></Form.Text>\r\n\r\n          <Form.Label >Documento Estrangeiro</Form.Label>\r\n          <Form.Check type='radio' ref={register({ required: true })} name='foreignDocument' value=\"não\" checked={foreignDocument === 'nao'} onChange={({ target }) => setForeignDocument(target.value)}  label='Não' />\r\n          <Form.Check type='radio' ref={register({ required: true })} name='foreignDocument' value=\"sim\" checked={foreignDocument === 'sim'} onChange={({ target }) => setForeignDocument(target.value)} label='Sim' />\r\n          <Form.Text className='error'><p>{errors.foreignDocument && \"Campo Documentação Estrangeira é obrigatório\"}</p></Form.Text>\r\n\r\n          <Form.Row>\r\n            <Input size='lg' lg=\"5\" label='Num. de Passaporte' name='passaport' register={register({ required: true })} value={passaport} type='number' textoErro={errors.passaport && \"Campo Num. de Passaporte é obrigatório\"} onChange={(event) => setPassaport(event.target.value)}></Input>\r\n            \r\n          </Form.Row>\r\n\r\n        \r\n\r\n          \r\n\r\n         \r\n\r\n          {loading ? (<Button size='lg' disabled className=\"col-lg-2 mt-3 \" variant=\"primary\" type=\"submit\"> Aguarde...</Button>\r\n          ) : (<Button size='lg' className=\"col-lg-2 mt-3  mb-4 mr-2 \" variant=\"primary\" type=\"submit\"> Pesquisar </Button>)}\r\n          <Button size='lg' className=\"col-lg-2 mt-3 mb-4 \" variant=\"secondary\" type=\"submit\" onClick={handleBack}> Voltar </Button>\r\n\r\n        </Form>\r\n      </div>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ManutencaoDiplomaAlterar\r\n","C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\HomeScreen.js",[],"C:\\Users\\Windows 8\\Desktop\\diploma\\src\\componentes\\UserContext.js",["231","232","233","234","235","236","237"],"import React from 'react';\r\n\r\nexport const UserContext = React.createContext();\r\n\r\nexport const UserStorage =({children}) =>{\r\n  const [data, setData] = React.useState('');\r\n  const [login, setLogin] = React.useState('');\r\n  const [loading, setLoading] = React.useState('');\r\n  const [error, setError] = React.useState('');\r\nreturn <UserContext.Provider value ={{data.masp}}>{children}</UserContext.Provider>;\r\n};",{"ruleId":"238","severity":1,"message":"239","line":3,"column":9,"nodeType":"240","messageId":"241","endLine":3,"endColumn":20},{"ruleId":"238","severity":1,"message":"242","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":12},{"ruleId":"238","severity":1,"message":"243","line":15,"column":8,"nodeType":"240","messageId":"241","endLine":15,"endColumn":19},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"238","severity":1,"message":"248","line":4,"column":8,"nodeType":"240","messageId":"241","endLine":4,"endColumn":14},{"ruleId":"238","severity":1,"message":"249","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":13},{"ruleId":"238","severity":1,"message":"250","line":7,"column":10,"nodeType":"240","messageId":"241","endLine":7,"endColumn":16},{"ruleId":"238","severity":1,"message":"251","line":7,"column":30,"nodeType":"240","messageId":"241","endLine":7,"endColumn":40},{"ruleId":"238","severity":1,"message":"252","line":9,"column":10,"nodeType":"240","messageId":"241","endLine":9,"endColumn":15},{"ruleId":"238","severity":1,"message":"253","line":22,"column":19,"nodeType":"240","messageId":"241","endLine":22,"endColumn":29},{"ruleId":"238","severity":1,"message":"254","line":24,"column":20,"nodeType":"240","messageId":"241","endLine":24,"endColumn":31},{"ruleId":"238","severity":1,"message":"255","line":26,"column":10,"nodeType":"240","messageId":"241","endLine":26,"endColumn":23},{"ruleId":"238","severity":1,"message":"256","line":26,"column":25,"nodeType":"240","messageId":"241","endLine":26,"endColumn":41},{"ruleId":"238","severity":1,"message":"257","line":33,"column":9,"nodeType":"240","messageId":"241","endLine":33,"endColumn":20},{"ruleId":"258","severity":1,"message":"259","line":77,"column":26,"nodeType":"260","messageId":"261","endLine":77,"endColumn":28},{"ruleId":"258","severity":1,"message":"259","line":77,"column":45,"nodeType":"260","messageId":"261","endLine":77,"endColumn":47},{"ruleId":"258","severity":1,"message":"259","line":82,"column":19,"nodeType":"260","messageId":"261","endLine":82,"endColumn":21},{"ruleId":"258","severity":1,"message":"259","line":85,"column":19,"nodeType":"260","messageId":"261","endLine":85,"endColumn":21},{"ruleId":"258","severity":1,"message":"259","line":109,"column":43,"nodeType":"260","messageId":"261","endLine":109,"endColumn":45},{"ruleId":"238","severity":1,"message":"262","line":4,"column":8,"nodeType":"240","messageId":"241","endLine":4,"endColumn":11},{"ruleId":"238","severity":1,"message":"263","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":13},{"ruleId":"238","severity":1,"message":"249","line":7,"column":8,"nodeType":"240","messageId":"241","endLine":7,"endColumn":13},{"ruleId":"238","severity":1,"message":"264","line":9,"column":10,"nodeType":"240","messageId":"241","endLine":9,"endColumn":22},{"ruleId":"238","severity":1,"message":"265","line":14,"column":8,"nodeType":"240","messageId":"241","endLine":14,"endColumn":16},{"ruleId":"238","severity":1,"message":"266","line":31,"column":10,"nodeType":"240","messageId":"241","endLine":31,"endColumn":19},{"ruleId":"238","severity":1,"message":"255","line":32,"column":10,"nodeType":"240","messageId":"241","endLine":32,"endColumn":23},{"ruleId":"238","severity":1,"message":"256","line":32,"column":25,"nodeType":"240","messageId":"241","endLine":32,"endColumn":41},{"ruleId":"238","severity":1,"message":"253","line":33,"column":19,"nodeType":"240","messageId":"241","endLine":33,"endColumn":29},{"ruleId":"238","severity":1,"message":"267","line":38,"column":10,"nodeType":"240","messageId":"241","endLine":38,"endColumn":15},{"ruleId":"238","severity":1,"message":"268","line":38,"column":17,"nodeType":"240","messageId":"241","endLine":38,"endColumn":25},{"ruleId":"238","severity":1,"message":"262","line":4,"column":8,"nodeType":"240","messageId":"241","endLine":4,"endColumn":11},{"ruleId":"238","severity":1,"message":"253","line":13,"column":21,"nodeType":"240","messageId":"241","endLine":13,"endColumn":31},{"ruleId":"238","severity":1,"message":"262","line":4,"column":8,"nodeType":"240","messageId":"241","endLine":4,"endColumn":11},{"ruleId":"238","severity":1,"message":"249","line":7,"column":8,"nodeType":"240","messageId":"241","endLine":7,"endColumn":13},{"ruleId":"238","severity":1,"message":"269","line":22,"column":21,"nodeType":"240","messageId":"241","endLine":22,"endColumn":30},{"ruleId":"238","severity":1,"message":"254","line":24,"column":22,"nodeType":"240","messageId":"241","endLine":24,"endColumn":33},{"ruleId":"238","severity":1,"message":"270","line":26,"column":12,"nodeType":"240","messageId":"241","endLine":26,"endColumn":16},{"ruleId":"238","severity":1,"message":"271","line":27,"column":12,"nodeType":"240","messageId":"241","endLine":27,"endColumn":23},{"ruleId":"238","severity":1,"message":"272","line":27,"column":25,"nodeType":"240","messageId":"241","endLine":27,"endColumn":39},{"ruleId":"238","severity":1,"message":"268","line":30,"column":19,"nodeType":"240","messageId":"241","endLine":30,"endColumn":27},{"ruleId":"238","severity":1,"message":"273","line":36,"column":11,"nodeType":"240","messageId":"241","endLine":36,"endColumn":22},{"ruleId":"238","severity":1,"message":"274","line":37,"column":11,"nodeType":"240","messageId":"241","endLine":37,"endColumn":21},{"ruleId":"238","severity":1,"message":"257","line":38,"column":11,"nodeType":"240","messageId":"241","endLine":38,"endColumn":22},{"ruleId":"258","severity":1,"message":"259","line":57,"column":38,"nodeType":"260","messageId":"261","endLine":57,"endColumn":40},{"ruleId":"258","severity":1,"message":"259","line":57,"column":57,"nodeType":"260","messageId":"261","endLine":57,"endColumn":59},{"ruleId":"258","severity":1,"message":"259","line":66,"column":31,"nodeType":"260","messageId":"261","endLine":66,"endColumn":33},{"ruleId":"258","severity":1,"message":"259","line":69,"column":31,"nodeType":"260","messageId":"261","endLine":69,"endColumn":33},{"ruleId":"258","severity":1,"message":"259","line":96,"column":57,"nodeType":"260","messageId":"261","endLine":96,"endColumn":59},{"ruleId":"238","severity":1,"message":"263","line":7,"column":8,"nodeType":"240","messageId":"241","endLine":7,"endColumn":13},{"ruleId":"238","severity":1,"message":"249","line":8,"column":8,"nodeType":"240","messageId":"241","endLine":8,"endColumn":13},{"ruleId":"238","severity":1,"message":"275","line":9,"column":8,"nodeType":"240","messageId":"241","endLine":9,"endColumn":13},{"ruleId":"238","severity":1,"message":"252","line":10,"column":10,"nodeType":"240","messageId":"241","endLine":10,"endColumn":15},{"ruleId":"238","severity":1,"message":"276","line":11,"column":10,"nodeType":"240","messageId":"241","endLine":11,"endColumn":25},{"ruleId":"238","severity":1,"message":"277","line":19,"column":9,"nodeType":"240","messageId":"241","endLine":19,"endColumn":19},{"ruleId":"238","severity":1,"message":"278","line":25,"column":10,"nodeType":"240","messageId":"241","endLine":25,"endColumn":20},{"ruleId":"238","severity":1,"message":"279","line":28,"column":10,"nodeType":"240","messageId":"241","endLine":28,"endColumn":12},{"ruleId":"238","severity":1,"message":"280","line":29,"column":10,"nodeType":"240","messageId":"241","endLine":29,"endColumn":22},{"ruleId":"238","severity":1,"message":"281","line":32,"column":17,"nodeType":"240","messageId":"241","endLine":32,"endColumn":25},{"ruleId":"238","severity":1,"message":"282","line":40,"column":10,"nodeType":"240","messageId":"241","endLine":40,"endColumn":21},{"ruleId":"238","severity":1,"message":"283","line":40,"column":23,"nodeType":"240","messageId":"241","endLine":40,"endColumn":37},{"ruleId":"238","severity":1,"message":"253","line":45,"column":19,"nodeType":"240","messageId":"241","endLine":45,"endColumn":29},{"ruleId":"238","severity":1,"message":"267","line":51,"column":10,"nodeType":"240","messageId":"241","endLine":51,"endColumn":15},{"ruleId":"238","severity":1,"message":"268","line":51,"column":17,"nodeType":"240","messageId":"241","endLine":51,"endColumn":25},{"ruleId":"238","severity":1,"message":"284","line":73,"column":9,"nodeType":"240","messageId":"241","endLine":73,"endColumn":18},{"ruleId":"285","severity":1,"message":"286","line":89,"column":60,"nodeType":"287","endLine":89,"endColumn":69},{"ruleId":"238","severity":1,"message":"253","line":22,"column":21,"nodeType":"240","messageId":"241","endLine":22,"endColumn":31},{"ruleId":"238","severity":1,"message":"288","line":18,"column":11,"nodeType":"240","messageId":"241","endLine":18,"endColumn":28},{"ruleId":"238","severity":1,"message":"289","line":8,"column":9,"nodeType":"240","messageId":"241","endLine":8,"endColumn":20},{"ruleId":"238","severity":1,"message":"262","line":4,"column":8,"nodeType":"240","messageId":"241","endLine":4,"endColumn":11},{"ruleId":"238","severity":1,"message":"249","line":7,"column":8,"nodeType":"240","messageId":"241","endLine":7,"endColumn":13},{"ruleId":"238","severity":1,"message":"269","line":20,"column":21,"nodeType":"240","messageId":"241","endLine":20,"endColumn":30},{"ruleId":"238","severity":1,"message":"254","line":22,"column":22,"nodeType":"240","messageId":"241","endLine":22,"endColumn":33},{"ruleId":"238","severity":1,"message":"270","line":24,"column":12,"nodeType":"240","messageId":"241","endLine":24,"endColumn":16},{"ruleId":"238","severity":1,"message":"271","line":25,"column":12,"nodeType":"240","messageId":"241","endLine":25,"endColumn":23},{"ruleId":"238","severity":1,"message":"272","line":25,"column":25,"nodeType":"240","messageId":"241","endLine":25,"endColumn":39},{"ruleId":"238","severity":1,"message":"268","line":28,"column":19,"nodeType":"240","messageId":"241","endLine":28,"endColumn":27},{"ruleId":"238","severity":1,"message":"273","line":34,"column":11,"nodeType":"240","messageId":"241","endLine":34,"endColumn":22},{"ruleId":"238","severity":1,"message":"274","line":35,"column":11,"nodeType":"240","messageId":"241","endLine":35,"endColumn":21},{"ruleId":"238","severity":1,"message":"257","line":36,"column":11,"nodeType":"240","messageId":"241","endLine":36,"endColumn":22},{"ruleId":"258","severity":1,"message":"259","line":54,"column":38,"nodeType":"260","messageId":"261","endLine":54,"endColumn":40},{"ruleId":"258","severity":1,"message":"259","line":54,"column":57,"nodeType":"260","messageId":"261","endLine":54,"endColumn":59},{"ruleId":"258","severity":1,"message":"259","line":63,"column":31,"nodeType":"260","messageId":"261","endLine":63,"endColumn":33},{"ruleId":"258","severity":1,"message":"259","line":66,"column":31,"nodeType":"260","messageId":"261","endLine":66,"endColumn":33},{"ruleId":"258","severity":1,"message":"259","line":94,"column":57,"nodeType":"260","messageId":"261","endLine":94,"endColumn":59},{"ruleId":"258","severity":1,"message":"290","line":10,"column":27,"nodeType":"260","messageId":"261","endLine":10,"endColumn":29},{"ruleId":"258","severity":1,"message":"290","line":23,"column":21,"nodeType":"260","messageId":"261","endLine":23,"endColumn":23},{"ruleId":"258","severity":1,"message":"290","line":31,"column":21,"nodeType":"260","messageId":"261","endLine":31,"endColumn":23},{"ruleId":"291","severity":1,"message":"292","line":35,"column":7,"nodeType":"293","messageId":"294","endLine":35,"endColumn":19},{"ruleId":"291","severity":1,"message":"292","line":39,"column":5,"nodeType":"295","messageId":"294","endLine":39,"endColumn":36},{"ruleId":"238","severity":1,"message":"263","line":7,"column":8,"nodeType":"240","messageId":"241","endLine":7,"endColumn":13},{"ruleId":"238","severity":1,"message":"249","line":8,"column":8,"nodeType":"240","messageId":"241","endLine":8,"endColumn":13},{"ruleId":"238","severity":1,"message":"275","line":9,"column":8,"nodeType":"240","messageId":"241","endLine":9,"endColumn":13},{"ruleId":"238","severity":1,"message":"252","line":10,"column":10,"nodeType":"240","messageId":"241","endLine":10,"endColumn":15},{"ruleId":"238","severity":1,"message":"276","line":11,"column":10,"nodeType":"240","messageId":"241","endLine":11,"endColumn":25},{"ruleId":"238","severity":1,"message":"296","line":18,"column":8,"nodeType":"240","messageId":"241","endLine":18,"endColumn":16},{"ruleId":"238","severity":1,"message":"277","line":19,"column":9,"nodeType":"240","messageId":"241","endLine":19,"endColumn":19},{"ruleId":"238","severity":1,"message":"278","line":26,"column":10,"nodeType":"240","messageId":"241","endLine":26,"endColumn":20},{"ruleId":"238","severity":1,"message":"297","line":27,"column":23,"nodeType":"240","messageId":"241","endLine":27,"endColumn":37},{"ruleId":"238","severity":1,"message":"279","line":32,"column":10,"nodeType":"240","messageId":"241","endLine":32,"endColumn":12},{"ruleId":"238","severity":1,"message":"253","line":44,"column":19,"nodeType":"240","messageId":"241","endLine":44,"endColumn":29},{"ruleId":"238","severity":1,"message":"267","line":50,"column":10,"nodeType":"240","messageId":"241","endLine":50,"endColumn":15},{"ruleId":"238","severity":1,"message":"268","line":50,"column":17,"nodeType":"240","messageId":"241","endLine":50,"endColumn":25},{"ruleId":"238","severity":1,"message":"284","line":72,"column":9,"nodeType":"240","messageId":"241","endLine":72,"endColumn":18},{"ruleId":"285","severity":1,"message":"286","line":89,"column":58,"nodeType":"287","endLine":89,"endColumn":67},{"ruleId":"238","severity":1,"message":"298","line":6,"column":16,"nodeType":"240","messageId":"241","endLine":6,"endColumn":23},{"ruleId":"238","severity":1,"message":"299","line":7,"column":10,"nodeType":"240","messageId":"241","endLine":7,"endColumn":15},{"ruleId":"238","severity":1,"message":"300","line":7,"column":17,"nodeType":"240","messageId":"241","endLine":7,"endColumn":25},{"ruleId":"238","severity":1,"message":"301","line":8,"column":10,"nodeType":"240","messageId":"241","endLine":8,"endColumn":17},{"ruleId":"238","severity":1,"message":"253","line":8,"column":19,"nodeType":"240","messageId":"241","endLine":8,"endColumn":29},{"ruleId":"238","severity":1,"message":"302","line":9,"column":10,"nodeType":"240","messageId":"241","endLine":9,"endColumn":15},{"ruleId":"238","severity":1,"message":"303","line":9,"column":17,"nodeType":"240","messageId":"241","endLine":9,"endColumn":25},"no-unused-vars","'UserStorage' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'LoginCreate' is defined but never used.","no-native-reassign",["304"],"no-negated-in-lhs",["305"],"'Button' is defined but never used.","'Modal' is defined but never used.","'FaEdit' is defined but never used.","'FaTrashAlt' is defined but never used.","'event' is defined but never used.","'setLoading' is assigned a value but never used.","'setNoRecord' is assigned a value but never used.","'showAlertErro' is assigned a value but never used.","'setShowAlertErro' is assigned a value but never used.","'handleTable' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Col' is defined but never used.","'Table' is defined but never used.","'FaGenderless' is defined but never used.","'Checkbox' is defined but never used.","'showAlert' is assigned a value but never used.","'dados' is assigned a value but never used.","'setDados' is assigned a value but never used.","'seLoading' is assigned a value but never used.","'show' is assigned a value but never used.","'showExcluir' is assigned a value but never used.","'setShowExcluir' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'Alert' is defined but never used.","'nativeTouchData' is defined but never used.","'valida_cpf' is defined but never used.","'nameMother' is assigned a value but never used.","'ra' is assigned a value but never used.","'diplomaTypes' is assigned a value but never used.","'setLevel' is assigned a value but never used.","'sheetNumber' is assigned a value but never used.","'setSheetNumber' is assigned a value but never used.","'handleCpf' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'handleAlertSucess' is assigned a value but never used.","'UserContext' is defined but never used.","Expected '!==' and instead saw '!='.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","ExpressionStatement","'Textarea' is defined but never used.","'setNationality' is assigned a value but never used.","'setData' is assigned a value but never used.","'login' is assigned a value but never used.","'setLogin' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]